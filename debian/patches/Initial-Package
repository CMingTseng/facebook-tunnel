Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 facebook-tunnel (20150319-1) UNRELEASED; urgency=medium
 .
   * Initial release. (Closes: #XXXXXX)
Author: dyngar-m <dyngar-m@dyngar.local>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeCache.txt
@@ -0,0 +1,353 @@
+# This is the CMakeCache file.
+# For build in directory: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+# It was generated by CMake: /usr/bin/cmake
+# You can edit this file to change values found and used by cmake.
+# If you do not want to change any of the values, simply exit the editor.
+# If you do want to change a value, simply edit, save, and exit the editor.
+# The syntax for the file is as follows:
+# KEY:TYPE=VALUE
+# KEY is the name of a variable in the cache.
+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
+# VALUE is the current value for the KEY.
+
+########################
+# EXTERNAL cache entries
+########################
+
+//Path to a program.
+CMAKE_AR:FILEPATH=/usr/bin/ar
+
+//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
+// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
+CMAKE_BUILD_TYPE:STRING=
+
+//Enable/Disable color output during build.
+CMAKE_COLOR_MAKEFILE:BOOL=ON
+
+//CXX compiler.
+CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++
+
+//Flags used by the compiler during all build types.
+CMAKE_CXX_FLAGS:STRING=
+
+//Flags used by the compiler during debug builds.
+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the compiler during release builds for minimum
+// size.
+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the compiler during release builds.
+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the compiler during release builds with debug info.
+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//C compiler.
+CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc
+
+//Flags used by the compiler during all build types.
+CMAKE_C_FLAGS:STRING=
+
+//Flags used by the compiler during debug builds.
+CMAKE_C_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the compiler during release builds for minimum
+// size.
+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the compiler during release builds.
+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the compiler during release builds with debug info.
+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Flags used by the linker.
+CMAKE_EXE_LINKER_FLAGS:STRING=' '
+
+//Flags used by the linker during debug builds.
+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Enable/Disable output of compile commands during generation.
+CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF
+
+//Install path prefix, prepended onto install directories.
+CMAKE_INSTALL_PREFIX:PATH=/usr/local
+
+//Path to a program.
+CMAKE_LINKER:FILEPATH=/usr/bin/ld
+
+//Path to a program.
+CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make
+
+//Flags used by the linker during the creation of modules.
+CMAKE_MODULE_LINKER_FLAGS:STRING=' '
+
+//Flags used by the linker during debug builds.
+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_NM:FILEPATH=/usr/bin/nm
+
+//Path to a program.
+CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy
+
+//Path to a program.
+CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump
+
+//Value Computed by CMake
+CMAKE_PROJECT_NAME:STATIC=facebook-tunnel
+
+//Path to a program.
+CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib
+
+//Flags used by the linker during the creation of dll's.
+CMAKE_SHARED_LINKER_FLAGS:STRING=' '
+
+//Flags used by the linker during debug builds.
+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//If set, runtime paths are not added when installing shared libraries,
+// but are added when building.
+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
+
+//If set, runtime paths are not added when using shared libraries.
+CMAKE_SKIP_RPATH:BOOL=NO
+
+//Flags used by the linker during the creation of static libraries.
+CMAKE_STATIC_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during debug builds.
+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_STRIP:FILEPATH=/usr/bin/strip
+
+//If true, cmake will use relative paths in makefiles and projects.
+CMAKE_USE_RELATIVE_PATHS:BOOL=OFF
+
+//If this value is on, makefiles will be generated without the
+// .SILENT directive, and all commands will be echoed to the console
+// during the make.  This is useful for debugging only. With Visual
+// Studio IDE projects all commands are done without /nologo.
+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
+
+//Path to a file.
+CURL_INCLUDE_DIR:PATH=/usr/include
+
+//Path to a library.
+CURL_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libcurl.so
+
+//Path to a file.
+GUMBO_INCLUDE_DIR:PATH=/usr/local/include
+
+//Path to a library.
+GUMBO_LIBRARY:FILEPATH=/usr/local/lib/libgumbo.so
+
+//Dependencies for target
+base64encode_LIB_DEPENDS:STATIC=
+
+//Dependencies for target
+client_LIB_DEPENDS:STATIC=
+
+//Value Computed by CMake
+facebook-tunnel_BINARY_DIR:STATIC=/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+//Value Computed by CMake
+facebook-tunnel_SOURCE_DIR:STATIC=/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+//Dependencies for target
+facebook_LIB_DEPENDS:STATIC=
+
+//Dependencies for the target
+tun_LIB_DEPENDS:STATIC=general;tun_dev;general;base64encode;
+
+//Dependencies for target
+tun_dev_LIB_DEPENDS:STATIC=
+
+//Dependencies for target
+utils_LIB_DEPENDS:STATIC=
+
+
+########################
+# INTERNAL cache entries
+########################
+
+//ADVANCED property for variable: CMAKE_AR
+CMAKE_AR-ADVANCED:INTERNAL=1
+//This is the directory where this CMakeCache.txt was created
+CMAKE_CACHEFILE_DIR:INTERNAL=/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+//Major version of cmake used to create the current loaded cache
+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
+//Minor version of cmake used to create the current loaded cache
+CMAKE_CACHE_MINOR_VERSION:INTERNAL=0
+//Patch version of cmake used to create the current loaded cache
+CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
+//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
+CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
+//Path to CMake executable.
+CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
+//Path to cpack program executable.
+CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
+//Path to ctest program executable.
+CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
+//ADVANCED property for variable: CMAKE_CXX_COMPILER
+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS
+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER
+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS
+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//Executable file format
+CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
+CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
+//Name of generator.
+CMAKE_GENERATOR:INTERNAL=Unix Makefiles
+//Name of generator toolset.
+CMAKE_GENERATOR_TOOLSET:INTERNAL=
+//Have symbol pthread_create
+CMAKE_HAVE_LIBC_CREATE:INTERNAL=
+//Have library pthreads
+CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
+//Have library pthread
+CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=1
+//Have include pthread.h
+CMAKE_HAVE_PTHREAD_H:INTERNAL=1
+//Start directory with the top level CMakeLists.txt file for this
+// project
+CMAKE_HOME_DIRECTORY:INTERNAL=/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+//Install .so files without execute permission.
+CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
+//ADVANCED property for variable: CMAKE_LINKER
+CMAKE_LINKER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
+CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_NM
+CMAKE_NM-ADVANCED:INTERNAL=1
+//number of local generators
+CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJCOPY
+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJDUMP
+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RANLIB
+CMAKE_RANLIB-ADVANCED:INTERNAL=1
+//Path to CMake installation.
+CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.0
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_RPATH
+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STRIP
+CMAKE_STRIP-ADVANCED:INTERNAL=1
+//uname command
+CMAKE_UNAME:INTERNAL=/bin/uname
+//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
+CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CURL_INCLUDE_DIR
+CURL_INCLUDE_DIR-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CURL_LIBRARY
+CURL_LIBRARY-ADVANCED:INTERNAL=1
+//Details about finding CURL
+FIND_PACKAGE_MESSAGE_DETAILS_CURL:INTERNAL=[/usr/lib/x86_64-linux-gnu/libcurl.so][/usr/include][v7.38.0()]
+//Details about finding Threads
+FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
+//Details about finding libgumbo
+FIND_PACKAGE_MESSAGE_DETAILS_libgumbo:INTERNAL=[/usr/local/lib/libgumbo.so][/usr/local/include][v()]
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/3.0.2/CMakeCCompiler.cmake
@@ -0,0 +1,58 @@
+set(CMAKE_C_COMPILER "/usr/bin/cc")
+set(CMAKE_C_COMPILER_ARG1 "")
+set(CMAKE_C_COMPILER_ID "GNU")
+set(CMAKE_C_COMPILER_VERSION "4.9.2")
+set(CMAKE_C_PLATFORM_ID "Linux")
+set(CMAKE_C_SIMULATE_ID "")
+set(CMAKE_C_SIMULATE_VERSION "")
+
+set(CMAKE_AR "/usr/bin/ar")
+set(CMAKE_RANLIB "/usr/bin/ranlib")
+set(CMAKE_LINKER "/usr/bin/ld")
+set(CMAKE_COMPILER_IS_GNUCC 1)
+set(CMAKE_C_COMPILER_LOADED 1)
+set(CMAKE_C_COMPILER_WORKS TRUE)
+set(CMAKE_C_ABI_COMPILED TRUE)
+set(CMAKE_COMPILER_IS_MINGW )
+set(CMAKE_COMPILER_IS_CYGWIN )
+if(CMAKE_COMPILER_IS_CYGWIN)
+  set(CYGWIN 1)
+  set(UNIX 1)
+endif()
+
+set(CMAKE_C_COMPILER_ENV_VAR "CC")
+
+if(CMAKE_COMPILER_IS_MINGW)
+  set(MINGW 1)
+endif()
+set(CMAKE_C_COMPILER_ID_RUN 1)
+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c)
+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
+set(CMAKE_C_LINKER_PREFERENCE 10)
+
+# Save compiler ABI information.
+set(CMAKE_C_SIZEOF_DATA_PTR "8")
+set(CMAKE_C_COMPILER_ABI "ELF")
+set(CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")
+
+if(CMAKE_C_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_C_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
+endif()
+
+if(CMAKE_C_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")
+endif()
+
+
+
+
+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "c")
+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/4.9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib")
+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
+
+
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/3.0.2/CMakeCXXCompiler.cmake
@@ -0,0 +1,59 @@
+set(CMAKE_CXX_COMPILER "/usr/bin/c++")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "GNU")
+set(CMAKE_CXX_COMPILER_VERSION "4.9.2")
+set(CMAKE_CXX_PLATFORM_ID "Linux")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+set(CMAKE_AR "/usr/bin/ar")
+set(CMAKE_RANLIB "/usr/bin/ranlib")
+set(CMAKE_LINKER "/usr/bin/ld")
+set(CMAKE_COMPILER_IS_GNUCXX 1)
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+set(CMAKE_COMPILER_IS_MINGW )
+set(CMAKE_COMPILER_IS_CYGWIN )
+if(CMAKE_COMPILER_IS_CYGWIN)
+  set(CYGWIN 1)
+  set(UNIX 1)
+endif()
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+if(CMAKE_COMPILER_IS_MINGW)
+  set(MINGW 1)
+endif()
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "ELF")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")
+endif()
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;c")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/4.9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
+
+
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/3.0.2/CMakeSystem.cmake
@@ -0,0 +1,15 @@
+set(CMAKE_HOST_SYSTEM "Linux-3.16.0-4-amd64")
+set(CMAKE_HOST_SYSTEM_NAME "Linux")
+set(CMAKE_HOST_SYSTEM_VERSION "3.16.0-4-amd64")
+set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
+
+
+
+set(CMAKE_SYSTEM "Linux-3.16.0-4-amd64")
+set(CMAKE_SYSTEM_NAME "Linux")
+set(CMAKE_SYSTEM_VERSION "3.16.0-4-amd64")
+set(CMAKE_SYSTEM_PROCESSOR "x86_64")
+
+set(CMAKE_CROSSCOMPILING "FALSE")
+
+set(CMAKE_SYSTEM_LOADED 1)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/3.0.2/CompilerIdC/CMakeCCompilerId.c
@@ -0,0 +1,442 @@
+#ifdef __cplusplus
+# error "A C++ compiler has been selected for C."
+#endif
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__18CXX)
+# define ID_VOID_MAIN
+#endif
+
+#if defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+  /* __INTEL_COMPILER = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+# if defined(__INTEL_COMPILER_UPDATE)
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+# else
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__clang__)
+# if defined(__apple_build_version__)
+#  define COMPILER_ID "AppleClang"
+#  define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+# else
+#  define COMPILER_ID "Clang"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH HEX(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "Watcom"
+  /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__WATCOMC__ % 100)
+
+#elif defined(__SUNPRO_C)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_C >= 0x5100
+   /* __SUNPRO_C = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# else
+   /* __SUNPRO_C = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# endif
+
+#elif defined(__HP_cc)
+# define COMPILER_ID "HP"
+  /* __HP_cc = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
+
+#elif defined(__DECC)
+# define COMPILER_ID "Compaq"
+  /* __DECC_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
+
+#elif defined(__IBMC__)
+# if defined(__COMPILER_VER__)
+#  define COMPILER_ID "zOS"
+# else
+#  if __IBMC__ >= 800
+#   define COMPILER_ID "XL"
+#  else
+#   define COMPILER_ID "VisualAge"
+#  endif
+   /* __IBMC__ = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+#  define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+# endif
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__TINYC__)
+# define COMPILER_ID "TinyCC"
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__GNUC__)
+# define COMPILER_ID "GNU"
+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+/* Analog VisualDSP++ >= 4.5.6 */
+#elif defined(__VISUALDSPVERSION__)
+# define COMPILER_ID "ADSP"
+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+
+/* Analog VisualDSP++ < 4.5.6 */
+#elif defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+# define COMPILER_ID "ADSP"
+
+/* IAR Systems compiler for embedded systems.
+   http://www.iar.com */
+#elif defined(__IAR_SYSTEMS_ICC__ ) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+
+/* sdcc, the small devices C compiler for embedded systems,
+   http://sdcc.sourceforge.net  */
+#elif defined(SDCC)
+# define COMPILER_ID "SDCC"
+  /* SDCC = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
+
+#elif defined(_SGI_COMPILER_VERSION) || defined(_COMPILER_VERSION)
+# define COMPILER_ID "MIPSpro"
+# if defined(_SGI_COMPILER_VERSION)
+  /* _SGI_COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_SGI_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_SGI_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_SGI_COMPILER_VERSION    % 10)
+# else
+  /* _COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_COMPILER_VERSION    % 10)
+# endif
+
+/* This compiler is either not known or is too old to define an
+   identification macro.  Try to identify the platform and guess that
+   it is the native compiler.  */
+#elif defined(__sgi)
+# define COMPILER_ID "MIPSpro"
+
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto";
+#endif
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
+# define PLATFORM_ID "IRIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#else /* unknown platform */
+# define PLATFORM_ID ""
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#else
+#  define ARCHITECTURE_ID ""
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number components. */
+#ifdef COMPILER_VERSION_MAJOR
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef ID_VOID_MAIN
+void main() {}
+#else
+int main(int argc, char* argv[])
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+  require += info_arch[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+  (void)argv;
+  return require;
+}
+#endif
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/3.0.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
@@ -0,0 +1,430 @@
+/* This source file must have a .cpp extension so that all C++ compilers
+   recognize the extension without flags.  Borland does not know .cxx for
+   example.  */
+#ifndef __cplusplus
+# error "A C compiler has been selected for C++."
+#endif
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__COMO__)
+# define COMPILER_ID "Comeau"
+  /* __COMO_VERSION__ = VRR */
+# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
+
+#elif defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+  /* __INTEL_COMPILER = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+# if defined(__INTEL_COMPILER_UPDATE)
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+# else
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__clang__)
+# if defined(__apple_build_version__)
+#  define COMPILER_ID "AppleClang"
+#  define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+# else
+#  define COMPILER_ID "Clang"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH HEX(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "Watcom"
+  /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__WATCOMC__ % 100)
+
+#elif defined(__SUNPRO_CC)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_CC >= 0x5100
+   /* __SUNPRO_CC = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# endif
+
+#elif defined(__HP_aCC)
+# define COMPILER_ID "HP"
+  /* __HP_aCC = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
+
+#elif defined(__DECCXX)
+# define COMPILER_ID "Compaq"
+  /* __DECCXX_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
+
+#elif defined(__IBMCPP__)
+# if defined(__COMPILER_VER__)
+#  define COMPILER_ID "zOS"
+# else
+#  if __IBMCPP__ >= 800
+#   define COMPILER_ID "XL"
+#  else
+#   define COMPILER_ID "VisualAge"
+#  endif
+   /* __IBMCPP__ = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+#  define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+# endif
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__GNUC__)
+# define COMPILER_ID "GNU"
+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+/* Analog VisualDSP++ >= 4.5.6 */
+#elif defined(__VISUALDSPVERSION__)
+# define COMPILER_ID "ADSP"
+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+
+/* Analog VisualDSP++ < 4.5.6 */
+#elif defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+# define COMPILER_ID "ADSP"
+
+/* IAR Systems compiler for embedded systems.
+   http://www.iar.com */
+#elif defined(__IAR_SYSTEMS_ICC__ ) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+
+#elif defined(_SGI_COMPILER_VERSION) || defined(_COMPILER_VERSION)
+# define COMPILER_ID "MIPSpro"
+# if defined(_SGI_COMPILER_VERSION)
+  /* _SGI_COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_SGI_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_SGI_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_SGI_COMPILER_VERSION    % 10)
+# else
+  /* _COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_COMPILER_VERSION    % 10)
+# endif
+
+/* This compiler is either not known or is too old to define an
+   identification macro.  Try to identify the platform and guess that
+   it is the native compiler.  */
+#elif defined(__sgi)
+# define COMPILER_ID "MIPSpro"
+
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto";
+#endif
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
+# define PLATFORM_ID "IRIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#else /* unknown platform */
+# define PLATFORM_ID ""
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#else
+#  define ARCHITECTURE_ID ""
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number components. */
+#ifdef COMPILER_VERSION_MAJOR
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+
+/*--------------------------------------------------------------------------*/
+
+int main(int argc, char* argv[])
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+  (void)argv;
+  return require;
+}
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -0,0 +1,16 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# Relative path conversion top directories.
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build")
+
+# Force unix paths in dependencies.
+set(CMAKE_FORCE_UNIX_PATHS 1)
+
+
+# The C and CXX include file regular expressions for this directory.
+set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
+set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
+set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
+set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/CMakeError.log
@@ -0,0 +1,57 @@
+Determining if the pthread_create exist failed with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec2763986139/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec2763986139.dir/build.make CMakeFiles/cmTryCompileExec2763986139.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building C object CMakeFiles/cmTryCompileExec2763986139.dir/CheckSymbolExists.c.o
+/usr/bin/cc    -o CMakeFiles/cmTryCompileExec2763986139.dir/CheckSymbolExists.c.o   -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
+Linking C executable cmTryCompileExec2763986139
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2763986139.dir/link.txt --verbose=1
+/usr/bin/cc       CMakeFiles/cmTryCompileExec2763986139.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2763986139 -rdynamic 
+CMakeFiles/cmTryCompileExec2763986139.dir/CheckSymbolExists.c.o: In function `main':
+CheckSymbolExists.c:(.text+0x16): undefined reference to `pthread_create'
+collect2: error: ld returned 1 exit status
+CMakeFiles/cmTryCompileExec2763986139.dir/build.make:88: recipe for target 'cmTryCompileExec2763986139' failed
+make[1]: *** [cmTryCompileExec2763986139] Error 1
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+Makefile:118: recipe for target 'cmTryCompileExec2763986139/fast' failed
+make: *** [cmTryCompileExec2763986139/fast] Error 2
+
+File /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
+/* */
+#include <pthread.h>
+
+int main(int argc, char** argv)
+{
+  (void)argv;
+#ifndef pthread_create
+  return ((int*)(&pthread_create))[argc];
+#else
+  (void)argc;
+  return 0;
+#endif
+}
+
+Determining if the function pthread_create exists in the pthreads failed with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec2383804543/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec2383804543.dir/build.make CMakeFiles/cmTryCompileExec2383804543.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building C object CMakeFiles/cmTryCompileExec2383804543.dir/CheckFunctionExists.c.o
+/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTryCompileExec2383804543.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.0/Modules/CheckFunctionExists.c
+Linking C executable cmTryCompileExec2383804543
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2383804543.dir/link.txt --verbose=1
+/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTryCompileExec2383804543.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2383804543 -rdynamic -lpthreads 
+/usr/bin/ld: cannot find -lpthreads
+collect2: error: ld returned 1 exit status
+CMakeFiles/cmTryCompileExec2383804543.dir/build.make:88: recipe for target 'cmTryCompileExec2383804543' failed
+make[1]: *** [cmTryCompileExec2383804543] Error 1
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+Makefile:118: recipe for target 'cmTryCompileExec2383804543/fast' failed
+make: *** [cmTryCompileExec2383804543/fast] Error 2
+
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/CMakeOutput.log
@@ -0,0 +1,307 @@
+The system is: Linux - 3.16.0-4-amd64 - x86_64
+Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
+Compiler: /usr/bin/cc 
+Build flags: 
+Id flags: 
+
+The output was:
+0
+
+
+Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"
+
+The C compiler identification is GNU, found in "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/3.0.2/CompilerIdC/a.out"
+
+Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
+Compiler: /usr/bin/c++ 
+Build flags: 
+Id flags: 
+
+The output was:
+0
+
+
+Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"
+
+The CXX compiler identification is GNU, found in "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/3.0.2/CompilerIdCXX/a.out"
+
+Determining if the C compiler works passed with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec843338646/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec843338646.dir/build.make CMakeFiles/cmTryCompileExec843338646.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building C object CMakeFiles/cmTryCompileExec843338646.dir/testCCompiler.c.o
+/usr/bin/cc    -o CMakeFiles/cmTryCompileExec843338646.dir/testCCompiler.c.o   -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/testCCompiler.c
+Linking C executable cmTryCompileExec843338646
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec843338646.dir/link.txt --verbose=1
+/usr/bin/cc       CMakeFiles/cmTryCompileExec843338646.dir/testCCompiler.c.o  -o cmTryCompileExec843338646 -rdynamic 
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+
+
+Detecting C compiler ABI info compiled with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec1602227651/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec1602227651.dir/build.make CMakeFiles/cmTryCompileExec1602227651.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building C object CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o
+/usr/bin/cc    -o CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.0/Modules/CMakeCCompilerABI.c
+Linking C executable cmTryCompileExec1602227651
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1602227651.dir/link.txt --verbose=1
+/usr/bin/cc     -v CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o  -o cmTryCompileExec1602227651 -rdynamic  
+Using built-in specs.
+COLLECT_GCC=/usr/bin/cc
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper
+Target: x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Debian 4.9.2-10' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --with-arch-32=i586 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Thread model: posix
+gcc version 4.9.2 (Debian 4.9.2-10) 
+COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/
+LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../:/lib/:/usr/lib/
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec1602227651' '-rdynamic' '-mtune=generic' '-march=x86-64'
+ /usr/lib/gcc/x86_64-linux-gnu/4.9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper -plugin-opt=-fresolution=/tmp/cc2JgLKt.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec1602227651 /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crt1.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/4.9/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/4.9 -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../.. CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-linux-gnu/4.9/crtend.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crtn.o
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+
+
+Parsed C implicit link information from above output:
+  link line regex: [^( *|.*[/\])(ld|([^/\]+-)?ld|collect2)[^/\]*( |$)]
+  ignore line: [Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp]
+  ignore line: []
+  ignore line: [Run Build Command:"/usr/bin/make" "cmTryCompileExec1602227651/fast"]
+  ignore line: [/usr/bin/make -f CMakeFiles/cmTryCompileExec1602227651.dir/build.make CMakeFiles/cmTryCompileExec1602227651.dir/build]
+  ignore line: [make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp']
+  ignore line: [/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1]
+  ignore line: [Building C object CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o]
+  ignore line: [/usr/bin/cc    -o CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.0/Modules/CMakeCCompilerABI.c]
+  ignore line: [Linking C executable cmTryCompileExec1602227651]
+  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1602227651.dir/link.txt --verbose=1]
+  ignore line: [/usr/bin/cc     -v CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o  -o cmTryCompileExec1602227651 -rdynamic  ]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=/usr/bin/cc]
+  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper]
+  ignore line: [Target: x86_64-linux-gnu]
+  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Debian 4.9.2-10' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --with-arch-32=i586 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 4.9.2 (Debian 4.9.2-10) ]
+  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/]
+  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../:/lib/:/usr/lib/]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec1602227651' '-rdynamic' '-mtune=generic' '-march=x86-64']
+  link line: [ /usr/lib/gcc/x86_64-linux-gnu/4.9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper -plugin-opt=-fresolution=/tmp/cc2JgLKt.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec1602227651 /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crt1.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/4.9/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/4.9 -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../.. CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-linux-gnu/4.9/crtend.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crtn.o]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/collect2] ==> ignore
+    arg [-plugin] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so] ==> ignore
+    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper] ==> ignore
+    arg [-plugin-opt=-fresolution=/tmp/cc2JgLKt.res] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
+    arg [-plugin-opt=-pass-through=-lc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
+    arg [--sysroot=/] ==> ignore
+    arg [--build-id] ==> ignore
+    arg [--eh-frame-hdr] ==> ignore
+    arg [-m] ==> ignore
+    arg [elf_x86_64] ==> ignore
+    arg [--hash-style=gnu] ==> ignore
+    arg [-export-dynamic] ==> ignore
+    arg [-dynamic-linker] ==> ignore
+    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
+    arg [-o] ==> ignore
+    arg [cmTryCompileExec1602227651] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crt1.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crti.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/crtbegin.o] ==> ignore
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib]
+    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
+    arg [-L/lib/../lib] ==> dir [/lib/../lib]
+    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
+    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../..]
+    arg [CMakeFiles/cmTryCompileExec1602227651.dir/CMakeCCompilerABI.c.o] ==> ignore
+    arg [-lgcc] ==> lib [gcc]
+    arg [--as-needed] ==> ignore
+    arg [-lgcc_s] ==> lib [gcc_s]
+    arg [--no-as-needed] ==> ignore
+    arg [-lc] ==> lib [c]
+    arg [-lgcc] ==> lib [gcc]
+    arg [--as-needed] ==> ignore
+    arg [-lgcc_s] ==> lib [gcc_s]
+    arg [--no-as-needed] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/crtend.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
+  remove lib [gcc]
+  remove lib [gcc_s]
+  remove lib [gcc]
+  remove lib [gcc_s]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9] ==> [/usr/lib/gcc/x86_64-linux-gnu/4.9]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib] ==> [/usr/lib]
+  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
+  collapse library dir [/lib/../lib] ==> [/lib]
+  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../..] ==> [/usr/lib]
+  implicit libs: [c]
+  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/4.9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
+  implicit fwks: []
+
+
+Determining if the CXX compiler works passed with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec3187280045/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec3187280045.dir/build.make CMakeFiles/cmTryCompileExec3187280045.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building CXX object CMakeFiles/cmTryCompileExec3187280045.dir/testCXXCompiler.cxx.o
+/usr/bin/c++     -o CMakeFiles/cmTryCompileExec3187280045.dir/testCXXCompiler.cxx.o -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
+Linking CXX executable cmTryCompileExec3187280045
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3187280045.dir/link.txt --verbose=1
+/usr/bin/c++        CMakeFiles/cmTryCompileExec3187280045.dir/testCXXCompiler.cxx.o  -o cmTryCompileExec3187280045 -rdynamic 
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+
+
+Detecting CXX compiler ABI info compiled with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec1872795367/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec1872795367.dir/build.make CMakeFiles/cmTryCompileExec1872795367.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building CXX object CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o
+/usr/bin/c++     -o CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.0/Modules/CMakeCXXCompilerABI.cpp
+Linking CXX executable cmTryCompileExec1872795367
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1872795367.dir/link.txt --verbose=1
+/usr/bin/c++      -v CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o  -o cmTryCompileExec1872795367 -rdynamic  
+Using built-in specs.
+COLLECT_GCC=/usr/bin/c++
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper
+Target: x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Debian 4.9.2-10' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --with-arch-32=i586 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Thread model: posix
+gcc version 4.9.2 (Debian 4.9.2-10) 
+COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/
+LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../:/lib/:/usr/lib/
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec1872795367' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
+ /usr/lib/gcc/x86_64-linux-gnu/4.9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper -plugin-opt=-fresolution=/tmp/cckyrwxV.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec1872795367 /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crt1.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/4.9/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/4.9 -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../.. CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/4.9/crtend.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crtn.o
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+
+
+Parsed CXX implicit link information from above output:
+  link line regex: [^( *|.*[/\])(ld|([^/\]+-)?ld|collect2)[^/\]*( |$)]
+  ignore line: [Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp]
+  ignore line: []
+  ignore line: [Run Build Command:"/usr/bin/make" "cmTryCompileExec1872795367/fast"]
+  ignore line: [/usr/bin/make -f CMakeFiles/cmTryCompileExec1872795367.dir/build.make CMakeFiles/cmTryCompileExec1872795367.dir/build]
+  ignore line: [make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp']
+  ignore line: [/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1]
+  ignore line: [Building CXX object CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o]
+  ignore line: [/usr/bin/c++     -o CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.0/Modules/CMakeCXXCompilerABI.cpp]
+  ignore line: [Linking CXX executable cmTryCompileExec1872795367]
+  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1872795367.dir/link.txt --verbose=1]
+  ignore line: [/usr/bin/c++      -v CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o  -o cmTryCompileExec1872795367 -rdynamic  ]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=/usr/bin/c++]
+  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper]
+  ignore line: [Target: x86_64-linux-gnu]
+  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Debian 4.9.2-10' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --with-arch-32=i586 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 4.9.2 (Debian 4.9.2-10) ]
+  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/]
+  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../:/lib/:/usr/lib/]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec1872795367' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
+  link line: [ /usr/lib/gcc/x86_64-linux-gnu/4.9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper -plugin-opt=-fresolution=/tmp/cckyrwxV.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec1872795367 /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crt1.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/4.9/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/4.9 -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../.. CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/4.9/crtend.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crtn.o]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/collect2] ==> ignore
+    arg [-plugin] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so] ==> ignore
+    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper] ==> ignore
+    arg [-plugin-opt=-fresolution=/tmp/cckyrwxV.res] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [--sysroot=/] ==> ignore
+    arg [--build-id] ==> ignore
+    arg [--eh-frame-hdr] ==> ignore
+    arg [-m] ==> ignore
+    arg [elf_x86_64] ==> ignore
+    arg [--hash-style=gnu] ==> ignore
+    arg [-export-dynamic] ==> ignore
+    arg [-dynamic-linker] ==> ignore
+    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
+    arg [-o] ==> ignore
+    arg [cmTryCompileExec1872795367] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crt1.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crti.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/crtbegin.o] ==> ignore
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib]
+    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
+    arg [-L/lib/../lib] ==> dir [/lib/../lib]
+    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
+    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../..]
+    arg [CMakeFiles/cmTryCompileExec1872795367.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
+    arg [-lstdc++] ==> lib [stdc++]
+    arg [-lm] ==> lib [m]
+    arg [-lgcc_s] ==> lib [gcc_s]
+    arg [-lgcc] ==> lib [gcc]
+    arg [-lc] ==> lib [c]
+    arg [-lgcc_s] ==> lib [gcc_s]
+    arg [-lgcc] ==> lib [gcc]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/crtend.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
+  remove lib [gcc_s]
+  remove lib [gcc]
+  remove lib [gcc_s]
+  remove lib [gcc]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9] ==> [/usr/lib/gcc/x86_64-linux-gnu/4.9]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib] ==> [/usr/lib]
+  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
+  collapse library dir [/lib/../lib] ==> [/lib]
+  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/4.9/../../..] ==> [/usr/lib]
+  implicit libs: [stdc++;m;c]
+  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/4.9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
+  implicit fwks: []
+
+
+Determining if files pthread.h exist passed with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec3038287128/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec3038287128.dir/build.make CMakeFiles/cmTryCompileExec3038287128.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building C object CMakeFiles/cmTryCompileExec3038287128.dir/CheckIncludeFiles.c.o
+/usr/bin/cc    -o CMakeFiles/cmTryCompileExec3038287128.dir/CheckIncludeFiles.c.o   -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
+Linking C executable cmTryCompileExec3038287128
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3038287128.dir/link.txt --verbose=1
+/usr/bin/cc       CMakeFiles/cmTryCompileExec3038287128.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3038287128 -rdynamic 
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+
+
+Determining if the function pthread_create exists in the pthread passed with the following output:
+Change Dir: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTryCompileExec508195229/fast"
+/usr/bin/make -f CMakeFiles/cmTryCompileExec508195229.dir/build.make CMakeFiles/cmTryCompileExec508195229.dir/build
+make[1]: Entering directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+/usr/bin/cmake -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp/CMakeFiles 1
+Building C object CMakeFiles/cmTryCompileExec508195229.dir/CheckFunctionExists.c.o
+/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTryCompileExec508195229.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.0/Modules/CheckFunctionExists.c
+Linking C executable cmTryCompileExec508195229
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec508195229.dir/link.txt --verbose=1
+/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTryCompileExec508195229.dir/CheckFunctionExists.c.o  -o cmTryCompileExec508195229 -rdynamic -lpthread 
+make[1]: Leaving directory '/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/CMakeTmp'
+
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/Makefile.cmake
@@ -0,0 +1,83 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# The generator used is:
+set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")
+
+# The top level Makefile was generated from the following files:
+set(CMAKE_MAKEFILE_DEPENDS
+  "CMakeCache.txt"
+  "../CMakeLists.txt"
+  "CMakeFiles/3.0.2/CMakeCCompiler.cmake"
+  "CMakeFiles/3.0.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/3.0.2/CMakeSystem.cmake"
+  "../cmake/Modules/Findgumbo.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeCCompiler.cmake.in"
+  "/usr/share/cmake-3.0/Modules/CMakeCCompilerABI.c"
+  "/usr/share/cmake-3.0/Modules/CMakeCInformation.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeCXXCompiler.cmake.in"
+  "/usr/share/cmake-3.0/Modules/CMakeCXXCompilerABI.cpp"
+  "/usr/share/cmake-3.0/Modules/CMakeCXXInformation.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeCommonLanguageInclude.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeConfigurableFile.in"
+  "/usr/share/cmake-3.0/Modules/CMakeDetermineCCompiler.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeDetermineCXXCompiler.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeDetermineCompiler.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeDetermineCompilerABI.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeDetermineCompilerId.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeDetermineSystem.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeFindBinUtils.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeGenericSystem.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeParseArguments.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeParseImplicitLinkInfo.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeSystem.cmake.in"
+  "/usr/share/cmake-3.0/Modules/CMakeSystemSpecificInformation.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeTestCCompiler.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeTestCXXCompiler.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeTestCompilerCommon.cmake"
+  "/usr/share/cmake-3.0/Modules/CMakeUnixFindMake.cmake"
+  "/usr/share/cmake-3.0/Modules/CheckFunctionExists.c"
+  "/usr/share/cmake-3.0/Modules/CheckIncludeFiles.cmake"
+  "/usr/share/cmake-3.0/Modules/CheckLibraryExists.cmake"
+  "/usr/share/cmake-3.0/Modules/CheckSymbolExists.cmake"
+  "/usr/share/cmake-3.0/Modules/Compiler/GNU-C.cmake"
+  "/usr/share/cmake-3.0/Modules/Compiler/GNU-CXX.cmake"
+  "/usr/share/cmake-3.0/Modules/Compiler/GNU.cmake"
+  "/usr/share/cmake-3.0/Modules/FindCURL.cmake"
+  "/usr/share/cmake-3.0/Modules/FindPackageHandleStandardArgs.cmake"
+  "/usr/share/cmake-3.0/Modules/FindPackageMessage.cmake"
+  "/usr/share/cmake-3.0/Modules/FindThreads.cmake"
+  "/usr/share/cmake-3.0/Modules/Platform/Linux-CXX.cmake"
+  "/usr/share/cmake-3.0/Modules/Platform/Linux-GNU-C.cmake"
+  "/usr/share/cmake-3.0/Modules/Platform/Linux-GNU-CXX.cmake"
+  "/usr/share/cmake-3.0/Modules/Platform/Linux-GNU.cmake"
+  "/usr/share/cmake-3.0/Modules/Platform/Linux.cmake"
+  "/usr/share/cmake-3.0/Modules/Platform/UnixPaths.cmake"
+  )
+
+# The corresponding makefile is:
+set(CMAKE_MAKEFILE_OUTPUTS
+  "Makefile"
+  "CMakeFiles/cmake.check_cache"
+  )
+
+# Byproducts of CMake generate step:
+set(CMAKE_MAKEFILE_PRODUCTS
+  "CMakeFiles/3.0.2/CMakeSystem.cmake"
+  "CMakeFiles/3.0.2/CMakeCCompiler.cmake"
+  "CMakeFiles/3.0.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/3.0.2/CMakeCCompiler.cmake"
+  "CMakeFiles/3.0.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/CMakeDirectoryInformation.cmake"
+  )
+
+# Dependency information for all targets:
+set(CMAKE_DEPEND_INFO_FILES
+  "CMakeFiles/base64encode.dir/DependInfo.cmake"
+  "CMakeFiles/client.dir/DependInfo.cmake"
+  "CMakeFiles/facebook.dir/DependInfo.cmake"
+  "CMakeFiles/facebook-tunnel.dir/DependInfo.cmake"
+  "CMakeFiles/tun.dir/DependInfo.cmake"
+  "CMakeFiles/tun_dev.dir/DependInfo.cmake"
+  "CMakeFiles/utils.dir/DependInfo.cmake"
+  )
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/Makefile2
@@ -0,0 +1,315 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# Default target executed when no arguments are given to make.
+default_target: all
+.PHONY : default_target
+
+# The main recursive all target
+all:
+.PHONY : all
+
+# The main recursive preinstall target
+preinstall:
+.PHONY : preinstall
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+#=============================================================================
+# Target rules for target CMakeFiles/base64encode.dir
+
+# All Build rule for target.
+CMakeFiles/base64encode.dir/all:
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/depend
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  1
+	@echo "Built target base64encode"
+.PHONY : CMakeFiles/base64encode.dir/all
+
+# Include target in all.
+all: CMakeFiles/base64encode.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/base64encode.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 1
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/base64encode.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/base64encode.dir/rule
+
+# Convenience name for target.
+base64encode: CMakeFiles/base64encode.dir/rule
+.PHONY : base64encode
+
+# clean rule for target.
+CMakeFiles/base64encode.dir/clean:
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/clean
+.PHONY : CMakeFiles/base64encode.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/base64encode.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/client.dir
+
+# All Build rule for target.
+CMakeFiles/client.dir/all:
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/depend
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  2
+	@echo "Built target client"
+.PHONY : CMakeFiles/client.dir/all
+
+# Include target in all.
+all: CMakeFiles/client.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/client.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 1
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/client.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/client.dir/rule
+
+# Convenience name for target.
+client: CMakeFiles/client.dir/rule
+.PHONY : client
+
+# clean rule for target.
+CMakeFiles/client.dir/clean:
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/clean
+.PHONY : CMakeFiles/client.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/client.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/facebook.dir
+
+# All Build rule for target.
+CMakeFiles/facebook.dir/all:
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/depend
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  3
+	@echo "Built target facebook"
+.PHONY : CMakeFiles/facebook.dir/all
+
+# Include target in all.
+all: CMakeFiles/facebook.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/facebook.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 1
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/facebook.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/facebook.dir/rule
+
+# Convenience name for target.
+facebook: CMakeFiles/facebook.dir/rule
+.PHONY : facebook
+
+# clean rule for target.
+CMakeFiles/facebook.dir/clean:
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/clean
+.PHONY : CMakeFiles/facebook.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/facebook.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/facebook-tunnel.dir
+
+# All Build rule for target.
+CMakeFiles/facebook-tunnel.dir/all: CMakeFiles/facebook.dir/all
+CMakeFiles/facebook-tunnel.dir/all: CMakeFiles/tun.dir/all
+CMakeFiles/facebook-tunnel.dir/all: CMakeFiles/base64encode.dir/all
+CMakeFiles/facebook-tunnel.dir/all: CMakeFiles/utils.dir/all
+CMakeFiles/facebook-tunnel.dir/all: CMakeFiles/tun_dev.dir/all
+CMakeFiles/facebook-tunnel.dir/all: CMakeFiles/client.dir/all
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/depend
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  4
+	@echo "Built target facebook-tunnel"
+.PHONY : CMakeFiles/facebook-tunnel.dir/all
+
+# Include target in all.
+all: CMakeFiles/facebook-tunnel.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/facebook-tunnel.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 7
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/facebook-tunnel.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/facebook-tunnel.dir/rule
+
+# Convenience name for target.
+facebook-tunnel: CMakeFiles/facebook-tunnel.dir/rule
+.PHONY : facebook-tunnel
+
+# clean rule for target.
+CMakeFiles/facebook-tunnel.dir/clean:
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/clean
+.PHONY : CMakeFiles/facebook-tunnel.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/facebook-tunnel.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/tun.dir
+
+# All Build rule for target.
+CMakeFiles/tun.dir/all: CMakeFiles/base64encode.dir/all
+CMakeFiles/tun.dir/all: CMakeFiles/tun_dev.dir/all
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/depend
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  5
+	@echo "Built target tun"
+.PHONY : CMakeFiles/tun.dir/all
+
+# Include target in all.
+all: CMakeFiles/tun.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/tun.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 3
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/tun.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/tun.dir/rule
+
+# Convenience name for target.
+tun: CMakeFiles/tun.dir/rule
+.PHONY : tun
+
+# clean rule for target.
+CMakeFiles/tun.dir/clean:
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/clean
+.PHONY : CMakeFiles/tun.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/tun.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/tun_dev.dir
+
+# All Build rule for target.
+CMakeFiles/tun_dev.dir/all:
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/depend
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  6
+	@echo "Built target tun_dev"
+.PHONY : CMakeFiles/tun_dev.dir/all
+
+# Include target in all.
+all: CMakeFiles/tun_dev.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/tun_dev.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 1
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/tun_dev.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/tun_dev.dir/rule
+
+# Convenience name for target.
+tun_dev: CMakeFiles/tun_dev.dir/rule
+.PHONY : tun_dev
+
+# clean rule for target.
+CMakeFiles/tun_dev.dir/clean:
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/clean
+.PHONY : CMakeFiles/tun_dev.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/tun_dev.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/utils.dir
+
+# All Build rule for target.
+CMakeFiles/utils.dir/all:
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/depend
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/build
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles  7
+	@echo "Built target utils"
+.PHONY : CMakeFiles/utils.dir/all
+
+# Include target in all.
+all: CMakeFiles/utils.dir/all
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/utils.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 1
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/utils.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : CMakeFiles/utils.dir/rule
+
+# Convenience name for target.
+utils: CMakeFiles/utils.dir/rule
+.PHONY : utils
+
+# clean rule for target.
+CMakeFiles/utils.dir/clean:
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/clean
+.PHONY : CMakeFiles/utils.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/utils.dir/clean
+.PHONY : clean
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/TargetDirectories.txt
@@ -0,0 +1,7 @@
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/base64encode.dir
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/client.dir
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook.dir
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook-tunnel.dir
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun.dir
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun_dev.dir
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/utils.dir
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/C.includecache
@@ -0,0 +1,22 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.c
+stddef.h
+-
+stdint.h
+-
+base64encode.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.h
+stddef.h
+-
+stdint.h
+-
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/DependInfo.cmake
@@ -0,0 +1,20 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "C"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_C
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.c" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/base64encode.dir/base64encode.c.o"
+  )
+set(CMAKE_C_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/build.make
@@ -0,0 +1,103 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/base64encode.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/base64encode.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/base64encode.dir/flags.make
+
+CMakeFiles/base64encode.dir/base64encode.c.o: CMakeFiles/base64encode.dir/flags.make
+CMakeFiles/base64encode.dir/base64encode.c.o: ../base64encode.c
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building C object CMakeFiles/base64encode.dir/base64encode.c.o"
+	/usr/bin/cc  $(C_DEFINES) $(C_FLAGS) -o CMakeFiles/base64encode.dir/base64encode.c.o   -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.c
+
+CMakeFiles/base64encode.dir/base64encode.c.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing C source to CMakeFiles/base64encode.dir/base64encode.c.i"
+	/usr/bin/cc  $(C_DEFINES) $(C_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.c > CMakeFiles/base64encode.dir/base64encode.c.i
+
+CMakeFiles/base64encode.dir/base64encode.c.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling C source to assembly CMakeFiles/base64encode.dir/base64encode.c.s"
+	/usr/bin/cc  $(C_DEFINES) $(C_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.c -o CMakeFiles/base64encode.dir/base64encode.c.s
+
+CMakeFiles/base64encode.dir/base64encode.c.o.requires:
+.PHONY : CMakeFiles/base64encode.dir/base64encode.c.o.requires
+
+CMakeFiles/base64encode.dir/base64encode.c.o.provides: CMakeFiles/base64encode.dir/base64encode.c.o.requires
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/base64encode.c.o.provides.build
+.PHONY : CMakeFiles/base64encode.dir/base64encode.c.o.provides
+
+CMakeFiles/base64encode.dir/base64encode.c.o.provides.build: CMakeFiles/base64encode.dir/base64encode.c.o
+
+# Object files for target base64encode
+base64encode_OBJECTS = \
+"CMakeFiles/base64encode.dir/base64encode.c.o"
+
+# External object files for target base64encode
+base64encode_EXTERNAL_OBJECTS =
+
+libbase64encode.a: CMakeFiles/base64encode.dir/base64encode.c.o
+libbase64encode.a: CMakeFiles/base64encode.dir/build.make
+libbase64encode.a: CMakeFiles/base64encode.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking C static library libbase64encode.a"
+	$(CMAKE_COMMAND) -P CMakeFiles/base64encode.dir/cmake_clean_target.cmake
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/base64encode.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/base64encode.dir/build: libbase64encode.a
+.PHONY : CMakeFiles/base64encode.dir/build
+
+CMakeFiles/base64encode.dir/requires: CMakeFiles/base64encode.dir/base64encode.c.o.requires
+.PHONY : CMakeFiles/base64encode.dir/requires
+
+CMakeFiles/base64encode.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/base64encode.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/base64encode.dir/clean
+
+CMakeFiles/base64encode.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/base64encode.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/base64encode.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/base64encode.dir/base64encode.c.o"
+  "libbase64encode.pdb"
+  "libbase64encode.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang C)
+  include(CMakeFiles/base64encode.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/cmake_clean_target.cmake
@@ -0,0 +1,3 @@
+file(REMOVE_RECURSE
+  "libbase64encode.a"
+)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/depend.internal
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/base64encode.dir/base64encode.c.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.c
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.h
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/depend.make
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/base64encode.dir/base64encode.c.o: ../base64encode.c
+CMakeFiles/base64encode.dir/base64encode.c.o: ../base64encode.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile C with /usr/bin/cc
+C_FLAGS =  
+
+C_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/link.txt
@@ -0,0 +1,2 @@
+/usr/bin/ar cr libbase64encode.a  CMakeFiles/base64encode.dir/base64encode.c.o
+/usr/bin/ranlib libbase64encode.a
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/base64encode.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 1
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/CXX.includecache
@@ -0,0 +1,14 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.cpp
+client.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/DependInfo.cmake
@@ -0,0 +1,20 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.cpp" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/client.dir/client.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/build.make
@@ -0,0 +1,103 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/client.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/client.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/client.dir/flags.make
+
+CMakeFiles/client.dir/client.cpp.o: CMakeFiles/client.dir/flags.make
+CMakeFiles/client.dir/client.cpp.o: ../client.cpp
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object CMakeFiles/client.dir/client.cpp.o"
+	/usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/client.dir/client.cpp.o -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.cpp
+
+CMakeFiles/client.dir/client.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/client.dir/client.cpp.i"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.cpp > CMakeFiles/client.dir/client.cpp.i
+
+CMakeFiles/client.dir/client.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/client.dir/client.cpp.s"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.cpp -o CMakeFiles/client.dir/client.cpp.s
+
+CMakeFiles/client.dir/client.cpp.o.requires:
+.PHONY : CMakeFiles/client.dir/client.cpp.o.requires
+
+CMakeFiles/client.dir/client.cpp.o.provides: CMakeFiles/client.dir/client.cpp.o.requires
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/client.cpp.o.provides.build
+.PHONY : CMakeFiles/client.dir/client.cpp.o.provides
+
+CMakeFiles/client.dir/client.cpp.o.provides.build: CMakeFiles/client.dir/client.cpp.o
+
+# Object files for target client
+client_OBJECTS = \
+"CMakeFiles/client.dir/client.cpp.o"
+
+# External object files for target client
+client_EXTERNAL_OBJECTS =
+
+libclient.a: CMakeFiles/client.dir/client.cpp.o
+libclient.a: CMakeFiles/client.dir/build.make
+libclient.a: CMakeFiles/client.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX static library libclient.a"
+	$(CMAKE_COMMAND) -P CMakeFiles/client.dir/cmake_clean_target.cmake
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/client.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/client.dir/build: libclient.a
+.PHONY : CMakeFiles/client.dir/build
+
+CMakeFiles/client.dir/requires: CMakeFiles/client.dir/client.cpp.o.requires
+.PHONY : CMakeFiles/client.dir/requires
+
+CMakeFiles/client.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/client.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/client.dir/clean
+
+CMakeFiles/client.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/client.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/client.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/client.dir/client.cpp.o"
+  "libclient.pdb"
+  "libclient.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/client.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/cmake_clean_target.cmake
@@ -0,0 +1,3 @@
+file(REMOVE_RECURSE
+  "libclient.a"
+)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/depend.internal
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/client.dir/client.cpp.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.cpp
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/client.h
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/depend.make
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/client.dir/client.cpp.o: ../client.cpp
+CMakeFiles/client.dir/client.cpp.o: ../client.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS = -std=c++0x  
+
+CXX_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/link.txt
@@ -0,0 +1,2 @@
+/usr/bin/ar cr libclient.a  CMakeFiles/client.dir/client.cpp.o
+/usr/bin/ranlib libclient.a
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/client.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 2
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/cmake.check_cache
@@ -0,0 +1 @@
+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/CXX.includecache
@@ -0,0 +1,70 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+iostream
+-
+fstream
+-
+sstream
+-
+curl/curl.h
+-
+syslog.h
+-
+string.h
+-
+gumbo.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/gumbo.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/main.cpp
+stdio.h
+-
+stdlib.h
+-
+getopt.h
+-
+syslog.h
+-
+pthread.h
+-
+iostream
+-
+facebook.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+tun.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.h
+utils.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
+arpa/inet.h
+-
+netinet/in_systm.h
+-
+netinet/in.h
+-
+netinet/ip.h
+-
+netinet/tcp.h
+-
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.h
+tun_dev.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.h
+facebook.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+string
+-
+stdint.h
+-
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
+iostream
+-
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/DependInfo.cmake
@@ -0,0 +1,26 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/main.cpp" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook-tunnel.dir/main.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/base64encode.dir/DependInfo.cmake"
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun.dir/DependInfo.cmake"
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/client.dir/DependInfo.cmake"
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook.dir/DependInfo.cmake"
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/utils.dir/DependInfo.cmake"
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun_dev.dir/DependInfo.cmake"
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/build.make
@@ -0,0 +1,111 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/facebook-tunnel.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/facebook-tunnel.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/facebook-tunnel.dir/flags.make
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: CMakeFiles/facebook-tunnel.dir/flags.make
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: ../main.cpp
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object CMakeFiles/facebook-tunnel.dir/main.cpp.o"
+	/usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/facebook-tunnel.dir/main.cpp.o -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/main.cpp
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/facebook-tunnel.dir/main.cpp.i"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/main.cpp > CMakeFiles/facebook-tunnel.dir/main.cpp.i
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/facebook-tunnel.dir/main.cpp.s"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/main.cpp -o CMakeFiles/facebook-tunnel.dir/main.cpp.s
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.o.requires:
+.PHONY : CMakeFiles/facebook-tunnel.dir/main.cpp.o.requires
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.o.provides: CMakeFiles/facebook-tunnel.dir/main.cpp.o.requires
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/main.cpp.o.provides.build
+.PHONY : CMakeFiles/facebook-tunnel.dir/main.cpp.o.provides
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.o.provides.build: CMakeFiles/facebook-tunnel.dir/main.cpp.o
+
+# Object files for target facebook-tunnel
+facebook__tunnel_OBJECTS = \
+"CMakeFiles/facebook-tunnel.dir/main.cpp.o"
+
+# External object files for target facebook-tunnel
+facebook__tunnel_EXTERNAL_OBJECTS =
+
+facebook-tunnel: CMakeFiles/facebook-tunnel.dir/main.cpp.o
+facebook-tunnel: CMakeFiles/facebook-tunnel.dir/build.make
+facebook-tunnel: libbase64encode.a
+facebook-tunnel: libtun.a
+facebook-tunnel: libclient.a
+facebook-tunnel: libfacebook.a
+facebook-tunnel: libutils.a
+facebook-tunnel: /usr/lib/x86_64-linux-gnu/libcurl.so
+facebook-tunnel: /usr/local/lib/libgumbo.so
+facebook-tunnel: libbase64encode.a
+facebook-tunnel: libtun_dev.a
+facebook-tunnel: CMakeFiles/facebook-tunnel.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable facebook-tunnel"
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/facebook-tunnel.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/facebook-tunnel.dir/build: facebook-tunnel
+.PHONY : CMakeFiles/facebook-tunnel.dir/build
+
+CMakeFiles/facebook-tunnel.dir/requires: CMakeFiles/facebook-tunnel.dir/main.cpp.o.requires
+.PHONY : CMakeFiles/facebook-tunnel.dir/requires
+
+CMakeFiles/facebook-tunnel.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/facebook-tunnel.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/facebook-tunnel.dir/clean
+
+CMakeFiles/facebook-tunnel.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook-tunnel.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/facebook-tunnel.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/facebook-tunnel.dir/main.cpp.o"
+  "facebook-tunnel.pdb"
+  "facebook-tunnel"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/facebook-tunnel.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/depend.internal
@@ -0,0 +1,9 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/main.cpp
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/depend.make
@@ -0,0 +1,9 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: ../facebook.h
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: ../main.cpp
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: ../tun.h
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: ../tun_dev.h
+CMakeFiles/facebook-tunnel.dir/main.cpp.o: ../utils.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS = -std=c++0x  
+
+CXX_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/link.txt
@@ -0,0 +1 @@
+/usr/bin/c++   -std=c++0x    CMakeFiles/facebook-tunnel.dir/main.cpp.o  -o facebook-tunnel -rdynamic libbase64encode.a libtun.a libclient.a libfacebook.a libutils.a -lcurl /usr/local/lib/libgumbo.so -lpthread libbase64encode.a libtun_dev.a -Wl,-rpath,/usr/local/lib 
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook-tunnel.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 4
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/CXX.includecache
@@ -0,0 +1,28 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.cpp
+facebook.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+iostream
+-
+fstream
+-
+sstream
+-
+curl/curl.h
+-
+syslog.h
+-
+string.h
+-
+gumbo.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/gumbo.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/DependInfo.cmake
@@ -0,0 +1,20 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.cpp" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook.dir/facebook.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/build.make
@@ -0,0 +1,103 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/facebook.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/facebook.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/facebook.dir/flags.make
+
+CMakeFiles/facebook.dir/facebook.cpp.o: CMakeFiles/facebook.dir/flags.make
+CMakeFiles/facebook.dir/facebook.cpp.o: ../facebook.cpp
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object CMakeFiles/facebook.dir/facebook.cpp.o"
+	/usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/facebook.dir/facebook.cpp.o -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.cpp
+
+CMakeFiles/facebook.dir/facebook.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/facebook.dir/facebook.cpp.i"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.cpp > CMakeFiles/facebook.dir/facebook.cpp.i
+
+CMakeFiles/facebook.dir/facebook.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/facebook.dir/facebook.cpp.s"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.cpp -o CMakeFiles/facebook.dir/facebook.cpp.s
+
+CMakeFiles/facebook.dir/facebook.cpp.o.requires:
+.PHONY : CMakeFiles/facebook.dir/facebook.cpp.o.requires
+
+CMakeFiles/facebook.dir/facebook.cpp.o.provides: CMakeFiles/facebook.dir/facebook.cpp.o.requires
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/facebook.cpp.o.provides.build
+.PHONY : CMakeFiles/facebook.dir/facebook.cpp.o.provides
+
+CMakeFiles/facebook.dir/facebook.cpp.o.provides.build: CMakeFiles/facebook.dir/facebook.cpp.o
+
+# Object files for target facebook
+facebook_OBJECTS = \
+"CMakeFiles/facebook.dir/facebook.cpp.o"
+
+# External object files for target facebook
+facebook_EXTERNAL_OBJECTS =
+
+libfacebook.a: CMakeFiles/facebook.dir/facebook.cpp.o
+libfacebook.a: CMakeFiles/facebook.dir/build.make
+libfacebook.a: CMakeFiles/facebook.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX static library libfacebook.a"
+	$(CMAKE_COMMAND) -P CMakeFiles/facebook.dir/cmake_clean_target.cmake
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/facebook.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/facebook.dir/build: libfacebook.a
+.PHONY : CMakeFiles/facebook.dir/build
+
+CMakeFiles/facebook.dir/requires: CMakeFiles/facebook.dir/facebook.cpp.o.requires
+.PHONY : CMakeFiles/facebook.dir/requires
+
+CMakeFiles/facebook.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/facebook.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/facebook.dir/clean
+
+CMakeFiles/facebook.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/facebook.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/facebook.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/facebook.dir/facebook.cpp.o"
+  "libfacebook.pdb"
+  "libfacebook.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/facebook.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/cmake_clean_target.cmake
@@ -0,0 +1,3 @@
+file(REMOVE_RECURSE
+  "libfacebook.a"
+)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/depend.internal
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/facebook.dir/facebook.cpp.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.cpp
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/depend.make
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/facebook.dir/facebook.cpp.o: ../facebook.cpp
+CMakeFiles/facebook.dir/facebook.cpp.o: ../facebook.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS = -std=c++0x  
+
+CXX_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/link.txt
@@ -0,0 +1,2 @@
+/usr/bin/ar cr libfacebook.a  CMakeFiles/facebook.dir/facebook.cpp.o
+/usr/bin/ranlib libfacebook.a
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/facebook.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 3
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/progress.marks
@@ -0,0 +1 @@
+7
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/CXX.includecache
@@ -0,0 +1,90 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.h
+stddef.h
+-
+stdint.h
+-
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+iostream
+-
+fstream
+-
+sstream
+-
+curl/curl.h
+-
+syslog.h
+-
+string.h
+-
+gumbo.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/gumbo.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.cpp
+tun.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.h
+utils.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
+base64encode.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.h
+iostream
+-
+thread
+-
+syslog.h
+-
+stdlib.h
+-
+string.h
+-
+errno.h
+-
+stdio.h
+-
+unistd.h
+-
+fcntl.h
+-
+sys/ioctl.h
+-
+sys/socket.h
+-
+linux/if.h
+-
+linux/if_tun.h
+-
+arpa/inet.h
+-
+netinet/in_systm.h
+-
+netinet/in.h
+-
+netinet/ip.h
+-
+netinet/tcp.h
+-
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.h
+tun_dev.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.h
+facebook.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+string
+-
+stdint.h
+-
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
+iostream
+-
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/DependInfo.cmake
@@ -0,0 +1,22 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.cpp" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun.dir/tun.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun_dev.dir/DependInfo.cmake"
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/base64encode.dir/DependInfo.cmake"
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/build.make
@@ -0,0 +1,103 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/tun.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/tun.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/tun.dir/flags.make
+
+CMakeFiles/tun.dir/tun.cpp.o: CMakeFiles/tun.dir/flags.make
+CMakeFiles/tun.dir/tun.cpp.o: ../tun.cpp
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object CMakeFiles/tun.dir/tun.cpp.o"
+	/usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/tun.dir/tun.cpp.o -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.cpp
+
+CMakeFiles/tun.dir/tun.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/tun.dir/tun.cpp.i"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.cpp > CMakeFiles/tun.dir/tun.cpp.i
+
+CMakeFiles/tun.dir/tun.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/tun.dir/tun.cpp.s"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.cpp -o CMakeFiles/tun.dir/tun.cpp.s
+
+CMakeFiles/tun.dir/tun.cpp.o.requires:
+.PHONY : CMakeFiles/tun.dir/tun.cpp.o.requires
+
+CMakeFiles/tun.dir/tun.cpp.o.provides: CMakeFiles/tun.dir/tun.cpp.o.requires
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/tun.cpp.o.provides.build
+.PHONY : CMakeFiles/tun.dir/tun.cpp.o.provides
+
+CMakeFiles/tun.dir/tun.cpp.o.provides.build: CMakeFiles/tun.dir/tun.cpp.o
+
+# Object files for target tun
+tun_OBJECTS = \
+"CMakeFiles/tun.dir/tun.cpp.o"
+
+# External object files for target tun
+tun_EXTERNAL_OBJECTS =
+
+libtun.a: CMakeFiles/tun.dir/tun.cpp.o
+libtun.a: CMakeFiles/tun.dir/build.make
+libtun.a: CMakeFiles/tun.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX static library libtun.a"
+	$(CMAKE_COMMAND) -P CMakeFiles/tun.dir/cmake_clean_target.cmake
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/tun.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/tun.dir/build: libtun.a
+.PHONY : CMakeFiles/tun.dir/build
+
+CMakeFiles/tun.dir/requires: CMakeFiles/tun.dir/tun.cpp.o.requires
+.PHONY : CMakeFiles/tun.dir/requires
+
+CMakeFiles/tun.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/tun.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/tun.dir/clean
+
+CMakeFiles/tun.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/tun.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/tun.dir/tun.cpp.o"
+  "libtun.pdb"
+  "libtun.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/tun.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/cmake_clean_target.cmake
@@ -0,0 +1,3 @@
+file(REMOVE_RECURSE
+  "libtun.a"
+)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/depend.internal
@@ -0,0 +1,10 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/tun.dir/tun.cpp.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/base64encode.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/facebook.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.cpp
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.h
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/depend.make
@@ -0,0 +1,10 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/tun.dir/tun.cpp.o: ../base64encode.h
+CMakeFiles/tun.dir/tun.cpp.o: ../facebook.h
+CMakeFiles/tun.dir/tun.cpp.o: ../tun.cpp
+CMakeFiles/tun.dir/tun.cpp.o: ../tun.h
+CMakeFiles/tun.dir/tun.cpp.o: ../tun_dev.h
+CMakeFiles/tun.dir/tun.cpp.o: ../utils.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS = -std=c++0x  
+
+CXX_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/link.txt
@@ -0,0 +1,2 @@
+/usr/bin/ar cr libtun.a  CMakeFiles/tun.dir/tun.cpp.o
+/usr/bin/ranlib libtun.a
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 5
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/C.includecache
@@ -0,0 +1,34 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.c
+unistd.h
+-
+fcntl.h
+-
+stdlib.h
+-
+stdio.h
+-
+string.h
+-
+syslog.h
+-
+errno.h
+-
+sys/ioctl.h
+-
+sys/socket.h
+-
+linux/if.h
+-
+lib.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/lib.h
+linux/if_tun.h
+-
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/DependInfo.cmake
@@ -0,0 +1,20 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "C"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_C
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.c" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun_dev.dir/tun_dev.c.o"
+  )
+set(CMAKE_C_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/build.make
@@ -0,0 +1,103 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/tun_dev.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/tun_dev.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/tun_dev.dir/flags.make
+
+CMakeFiles/tun_dev.dir/tun_dev.c.o: CMakeFiles/tun_dev.dir/flags.make
+CMakeFiles/tun_dev.dir/tun_dev.c.o: ../tun_dev.c
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building C object CMakeFiles/tun_dev.dir/tun_dev.c.o"
+	/usr/bin/cc  $(C_DEFINES) $(C_FLAGS) -o CMakeFiles/tun_dev.dir/tun_dev.c.o   -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.c
+
+CMakeFiles/tun_dev.dir/tun_dev.c.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing C source to CMakeFiles/tun_dev.dir/tun_dev.c.i"
+	/usr/bin/cc  $(C_DEFINES) $(C_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.c > CMakeFiles/tun_dev.dir/tun_dev.c.i
+
+CMakeFiles/tun_dev.dir/tun_dev.c.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling C source to assembly CMakeFiles/tun_dev.dir/tun_dev.c.s"
+	/usr/bin/cc  $(C_DEFINES) $(C_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.c -o CMakeFiles/tun_dev.dir/tun_dev.c.s
+
+CMakeFiles/tun_dev.dir/tun_dev.c.o.requires:
+.PHONY : CMakeFiles/tun_dev.dir/tun_dev.c.o.requires
+
+CMakeFiles/tun_dev.dir/tun_dev.c.o.provides: CMakeFiles/tun_dev.dir/tun_dev.c.o.requires
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/tun_dev.c.o.provides.build
+.PHONY : CMakeFiles/tun_dev.dir/tun_dev.c.o.provides
+
+CMakeFiles/tun_dev.dir/tun_dev.c.o.provides.build: CMakeFiles/tun_dev.dir/tun_dev.c.o
+
+# Object files for target tun_dev
+tun_dev_OBJECTS = \
+"CMakeFiles/tun_dev.dir/tun_dev.c.o"
+
+# External object files for target tun_dev
+tun_dev_EXTERNAL_OBJECTS =
+
+libtun_dev.a: CMakeFiles/tun_dev.dir/tun_dev.c.o
+libtun_dev.a: CMakeFiles/tun_dev.dir/build.make
+libtun_dev.a: CMakeFiles/tun_dev.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking C static library libtun_dev.a"
+	$(CMAKE_COMMAND) -P CMakeFiles/tun_dev.dir/cmake_clean_target.cmake
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/tun_dev.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/tun_dev.dir/build: libtun_dev.a
+.PHONY : CMakeFiles/tun_dev.dir/build
+
+CMakeFiles/tun_dev.dir/requires: CMakeFiles/tun_dev.dir/tun_dev.c.o.requires
+.PHONY : CMakeFiles/tun_dev.dir/requires
+
+CMakeFiles/tun_dev.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/tun_dev.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/tun_dev.dir/clean
+
+CMakeFiles/tun_dev.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/tun_dev.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/tun_dev.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/tun_dev.dir/tun_dev.c.o"
+  "libtun_dev.pdb"
+  "libtun_dev.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang C)
+  include(CMakeFiles/tun_dev.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/cmake_clean_target.cmake
@@ -0,0 +1,3 @@
+file(REMOVE_RECURSE
+  "libtun_dev.a"
+)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/depend.internal
@@ -0,0 +1,5 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/tun_dev.dir/tun_dev.c.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/tun_dev.c
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/depend.make
@@ -0,0 +1,5 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/tun_dev.dir/tun_dev.c.o: ../tun_dev.c
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile C with /usr/bin/cc
+C_FLAGS =  
+
+C_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/link.txt
@@ -0,0 +1,2 @@
+/usr/bin/ar cr libtun_dev.a  CMakeFiles/tun_dev.dir/tun_dev.c.o
+/usr/bin/ranlib libtun_dev.a
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/tun_dev.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 6
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/CXX.includecache
@@ -0,0 +1,16 @@
+#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.cpp
+utils.h
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
+
+/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
+iostream
+-
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/DependInfo.cmake
@@ -0,0 +1,20 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.cpp" "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/utils.dir/utils.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# The include file search paths:
+set(CMAKE_C_TARGET_INCLUDE_PATH
+  )
+set(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
+set(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/build.make
@@ -0,0 +1,103 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+# Include any dependencies generated for this target.
+include CMakeFiles/utils.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/utils.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/utils.dir/flags.make
+
+CMakeFiles/utils.dir/utils.cpp.o: CMakeFiles/utils.dir/flags.make
+CMakeFiles/utils.dir/utils.cpp.o: ../utils.cpp
+	$(CMAKE_COMMAND) -E cmake_progress_report /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles $(CMAKE_PROGRESS_1)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object CMakeFiles/utils.dir/utils.cpp.o"
+	/usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/utils.dir/utils.cpp.o -c /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.cpp
+
+CMakeFiles/utils.dir/utils.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/utils.dir/utils.cpp.i"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.cpp > CMakeFiles/utils.dir/utils.cpp.i
+
+CMakeFiles/utils.dir/utils.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/utils.dir/utils.cpp.s"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.cpp -o CMakeFiles/utils.dir/utils.cpp.s
+
+CMakeFiles/utils.dir/utils.cpp.o.requires:
+.PHONY : CMakeFiles/utils.dir/utils.cpp.o.requires
+
+CMakeFiles/utils.dir/utils.cpp.o.provides: CMakeFiles/utils.dir/utils.cpp.o.requires
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/utils.cpp.o.provides.build
+.PHONY : CMakeFiles/utils.dir/utils.cpp.o.provides
+
+CMakeFiles/utils.dir/utils.cpp.o.provides.build: CMakeFiles/utils.dir/utils.cpp.o
+
+# Object files for target utils
+utils_OBJECTS = \
+"CMakeFiles/utils.dir/utils.cpp.o"
+
+# External object files for target utils
+utils_EXTERNAL_OBJECTS =
+
+libutils.a: CMakeFiles/utils.dir/utils.cpp.o
+libutils.a: CMakeFiles/utils.dir/build.make
+libutils.a: CMakeFiles/utils.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX static library libutils.a"
+	$(CMAKE_COMMAND) -P CMakeFiles/utils.dir/cmake_clean_target.cmake
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/utils.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/utils.dir/build: libutils.a
+.PHONY : CMakeFiles/utils.dir/build
+
+CMakeFiles/utils.dir/requires: CMakeFiles/utils.dir/utils.cpp.o.requires
+.PHONY : CMakeFiles/utils.dir/requires
+
+CMakeFiles/utils.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/utils.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/utils.dir/clean
+
+CMakeFiles/utils.dir/depend:
+	cd /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1 /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/utils.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/utils.dir/depend
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/utils.dir/utils.cpp.o"
+  "libutils.pdb"
+  "libutils.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/utils.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/cmake_clean_target.cmake
@@ -0,0 +1,3 @@
+file(REMOVE_RECURSE
+  "libutils.a"
+)
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/depend.internal
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/utils.dir/utils.cpp.o
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.cpp
+ /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/utils.h
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/depend.make
@@ -0,0 +1,6 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+CMakeFiles/utils.dir/utils.cpp.o: ../utils.cpp
+CMakeFiles/utils.dir/utils.cpp.o: ../utils.h
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/flags.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS = -std=c++0x  
+
+CXX_DEFINES = 
+
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/link.txt
@@ -0,0 +1,2 @@
+/usr/bin/ar cr libutils.a  CMakeFiles/utils.dir/utils.cpp.o
+/usr/bin/ranlib libutils.a
--- /dev/null
+++ facebook-tunnel-20150319/build/CMakeFiles/utils.dir/progress.make
@@ -0,0 +1,2 @@
+CMAKE_PROGRESS_1 = 7
+
--- /dev/null
+++ facebook-tunnel-20150319/build/Makefile
@@ -0,0 +1,413 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.0
+
+# Default target executed when no arguments are given to make.
+default_target: all
+.PHONY : default_target
+
+# Allow only one "make -f Makefile2" at a time, but pass parallelism.
+.NOTPARALLEL:
+.PHONY : .NOTPARALLEL
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+# A target that is always out of date.
+cmake_force:
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build
+
+#=============================================================================
+# Targets provided globally by CMake.
+
+# Special rule for the target edit_cache
+edit_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
+	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
+.PHONY : edit_cache
+
+# Special rule for the target edit_cache
+edit_cache/fast: edit_cache
+.PHONY : edit_cache/fast
+
+# Special rule for the target rebuild_cache
+rebuild_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
+	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
+.PHONY : rebuild_cache
+
+# Special rule for the target rebuild_cache
+rebuild_cache/fast: rebuild_cache
+.PHONY : rebuild_cache/fast
+
+# The main all target
+all: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles/progress.marks
+	$(MAKE) -f CMakeFiles/Makefile2 all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/CMakeFiles 0
+.PHONY : all
+
+# The main clean target
+clean:
+	$(MAKE) -f CMakeFiles/Makefile2 clean
+.PHONY : clean
+
+# The main clean target
+clean/fast: clean
+.PHONY : clean/fast
+
+# Prepare targets for installation.
+preinstall: all
+	$(MAKE) -f CMakeFiles/Makefile2 preinstall
+.PHONY : preinstall
+
+# Prepare targets for installation.
+preinstall/fast:
+	$(MAKE) -f CMakeFiles/Makefile2 preinstall
+.PHONY : preinstall/fast
+
+# clear depends
+depend:
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
+.PHONY : depend
+
+#=============================================================================
+# Target rules for targets named base64encode
+
+# Build rule for target.
+base64encode: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 base64encode
+.PHONY : base64encode
+
+# fast build rule for target.
+base64encode/fast:
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/build
+.PHONY : base64encode/fast
+
+#=============================================================================
+# Target rules for targets named client
+
+# Build rule for target.
+client: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 client
+.PHONY : client
+
+# fast build rule for target.
+client/fast:
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/build
+.PHONY : client/fast
+
+#=============================================================================
+# Target rules for targets named facebook
+
+# Build rule for target.
+facebook: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 facebook
+.PHONY : facebook
+
+# fast build rule for target.
+facebook/fast:
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/build
+.PHONY : facebook/fast
+
+#=============================================================================
+# Target rules for targets named facebook-tunnel
+
+# Build rule for target.
+facebook-tunnel: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 facebook-tunnel
+.PHONY : facebook-tunnel
+
+# fast build rule for target.
+facebook-tunnel/fast:
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/build
+.PHONY : facebook-tunnel/fast
+
+#=============================================================================
+# Target rules for targets named tun
+
+# Build rule for target.
+tun: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 tun
+.PHONY : tun
+
+# fast build rule for target.
+tun/fast:
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/build
+.PHONY : tun/fast
+
+#=============================================================================
+# Target rules for targets named tun_dev
+
+# Build rule for target.
+tun_dev: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 tun_dev
+.PHONY : tun_dev
+
+# fast build rule for target.
+tun_dev/fast:
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/build
+.PHONY : tun_dev/fast
+
+#=============================================================================
+# Target rules for targets named utils
+
+# Build rule for target.
+utils: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 utils
+.PHONY : utils
+
+# fast build rule for target.
+utils/fast:
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/build
+.PHONY : utils/fast
+
+base64encode.o: base64encode.c.o
+.PHONY : base64encode.o
+
+# target to build an object file
+base64encode.c.o:
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/base64encode.c.o
+.PHONY : base64encode.c.o
+
+base64encode.i: base64encode.c.i
+.PHONY : base64encode.i
+
+# target to preprocess a source file
+base64encode.c.i:
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/base64encode.c.i
+.PHONY : base64encode.c.i
+
+base64encode.s: base64encode.c.s
+.PHONY : base64encode.s
+
+# target to generate assembly for a file
+base64encode.c.s:
+	$(MAKE) -f CMakeFiles/base64encode.dir/build.make CMakeFiles/base64encode.dir/base64encode.c.s
+.PHONY : base64encode.c.s
+
+client.o: client.cpp.o
+.PHONY : client.o
+
+# target to build an object file
+client.cpp.o:
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/client.cpp.o
+.PHONY : client.cpp.o
+
+client.i: client.cpp.i
+.PHONY : client.i
+
+# target to preprocess a source file
+client.cpp.i:
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/client.cpp.i
+.PHONY : client.cpp.i
+
+client.s: client.cpp.s
+.PHONY : client.s
+
+# target to generate assembly for a file
+client.cpp.s:
+	$(MAKE) -f CMakeFiles/client.dir/build.make CMakeFiles/client.dir/client.cpp.s
+.PHONY : client.cpp.s
+
+facebook.o: facebook.cpp.o
+.PHONY : facebook.o
+
+# target to build an object file
+facebook.cpp.o:
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/facebook.cpp.o
+.PHONY : facebook.cpp.o
+
+facebook.i: facebook.cpp.i
+.PHONY : facebook.i
+
+# target to preprocess a source file
+facebook.cpp.i:
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/facebook.cpp.i
+.PHONY : facebook.cpp.i
+
+facebook.s: facebook.cpp.s
+.PHONY : facebook.s
+
+# target to generate assembly for a file
+facebook.cpp.s:
+	$(MAKE) -f CMakeFiles/facebook.dir/build.make CMakeFiles/facebook.dir/facebook.cpp.s
+.PHONY : facebook.cpp.s
+
+main.o: main.cpp.o
+.PHONY : main.o
+
+# target to build an object file
+main.cpp.o:
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/main.cpp.o
+.PHONY : main.cpp.o
+
+main.i: main.cpp.i
+.PHONY : main.i
+
+# target to preprocess a source file
+main.cpp.i:
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/main.cpp.i
+.PHONY : main.cpp.i
+
+main.s: main.cpp.s
+.PHONY : main.s
+
+# target to generate assembly for a file
+main.cpp.s:
+	$(MAKE) -f CMakeFiles/facebook-tunnel.dir/build.make CMakeFiles/facebook-tunnel.dir/main.cpp.s
+.PHONY : main.cpp.s
+
+tun.o: tun.cpp.o
+.PHONY : tun.o
+
+# target to build an object file
+tun.cpp.o:
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/tun.cpp.o
+.PHONY : tun.cpp.o
+
+tun.i: tun.cpp.i
+.PHONY : tun.i
+
+# target to preprocess a source file
+tun.cpp.i:
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/tun.cpp.i
+.PHONY : tun.cpp.i
+
+tun.s: tun.cpp.s
+.PHONY : tun.s
+
+# target to generate assembly for a file
+tun.cpp.s:
+	$(MAKE) -f CMakeFiles/tun.dir/build.make CMakeFiles/tun.dir/tun.cpp.s
+.PHONY : tun.cpp.s
+
+tun_dev.o: tun_dev.c.o
+.PHONY : tun_dev.o
+
+# target to build an object file
+tun_dev.c.o:
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/tun_dev.c.o
+.PHONY : tun_dev.c.o
+
+tun_dev.i: tun_dev.c.i
+.PHONY : tun_dev.i
+
+# target to preprocess a source file
+tun_dev.c.i:
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/tun_dev.c.i
+.PHONY : tun_dev.c.i
+
+tun_dev.s: tun_dev.c.s
+.PHONY : tun_dev.s
+
+# target to generate assembly for a file
+tun_dev.c.s:
+	$(MAKE) -f CMakeFiles/tun_dev.dir/build.make CMakeFiles/tun_dev.dir/tun_dev.c.s
+.PHONY : tun_dev.c.s
+
+utils.o: utils.cpp.o
+.PHONY : utils.o
+
+# target to build an object file
+utils.cpp.o:
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/utils.cpp.o
+.PHONY : utils.cpp.o
+
+utils.i: utils.cpp.i
+.PHONY : utils.i
+
+# target to preprocess a source file
+utils.cpp.i:
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/utils.cpp.i
+.PHONY : utils.cpp.i
+
+utils.s: utils.cpp.s
+.PHONY : utils.s
+
+# target to generate assembly for a file
+utils.cpp.s:
+	$(MAKE) -f CMakeFiles/utils.dir/build.make CMakeFiles/utils.dir/utils.cpp.s
+.PHONY : utils.cpp.s
+
+# Help Target
+help:
+	@echo "The following are some of the valid targets for this Makefile:"
+	@echo "... all (the default if no target is provided)"
+	@echo "... clean"
+	@echo "... depend"
+	@echo "... base64encode"
+	@echo "... client"
+	@echo "... edit_cache"
+	@echo "... facebook"
+	@echo "... facebook-tunnel"
+	@echo "... rebuild_cache"
+	@echo "... tun"
+	@echo "... tun_dev"
+	@echo "... utils"
+	@echo "... base64encode.o"
+	@echo "... base64encode.i"
+	@echo "... base64encode.s"
+	@echo "... client.o"
+	@echo "... client.i"
+	@echo "... client.s"
+	@echo "... facebook.o"
+	@echo "... facebook.i"
+	@echo "... facebook.s"
+	@echo "... main.o"
+	@echo "... main.i"
+	@echo "... main.s"
+	@echo "... tun.o"
+	@echo "... tun.i"
+	@echo "... tun.s"
+	@echo "... tun_dev.o"
+	@echo "... tun_dev.i"
+	@echo "... tun_dev.s"
+	@echo "... utils.o"
+	@echo "... utils.i"
+	@echo "... utils.s"
+.PHONY : help
+
+
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
--- /dev/null
+++ facebook-tunnel-20150319/build/cmake_install.cmake
@@ -0,0 +1,44 @@
+# Install script for directory: /home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1
+
+# Set the install prefix
+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
+  set(CMAKE_INSTALL_PREFIX "/usr/local")
+endif()
+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+
+# Set the install configuration name.
+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+  if(BUILD_TYPE)
+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
+  else()
+    set(CMAKE_INSTALL_CONFIG_NAME "")
+  endif()
+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
+endif()
+
+# Set the component getting installed.
+if(NOT CMAKE_INSTALL_COMPONENT)
+  if(COMPONENT)
+    message(STATUS "Install component: \"${COMPONENT}\"")
+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
+  else()
+    set(CMAKE_INSTALL_COMPONENT)
+  endif()
+endif()
+
+# Install shared libraries without execute permission?
+if(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
+  set(CMAKE_INSTALL_SO_NO_EXE "1")
+endif()
+
+if(CMAKE_INSTALL_COMPONENT)
+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
+else()
+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
+endif()
+
+file(WRITE "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/${CMAKE_INSTALL_MANIFEST}" "")
+foreach(file ${CMAKE_INSTALL_MANIFEST_FILES})
+  file(APPEND "/home/dyngar-m/Projects/distro/facebook-tunnel_20150319-1/build/${CMAKE_INSTALL_MANIFEST}" "${file}\n")
+endforeach()
